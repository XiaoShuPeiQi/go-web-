definitions:
  controllers.Response:
    properties:
      code:
        type: integer
      data: {}
      msg: {}
    type: object
  models.ParamLogin:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.ParamSignup:
    properties:
      ac_password:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - ac_password
    - password
    - username
    type: object
  models.ParamVoteForPost:
    properties:
      direction:
        description: 投什么票
        enum:
        - -1
        - 0
        - 1
        example: "0"
        type: string
      post_id:
        description: 给哪个帖子投票
        example: "0"
        type: string
    required:
    - post_id
    type: object
  models.PostSwagger:
    properties:
      communityID:
        description: 社区id
        example: "0"
        type: string
      content:
        description: 帖子内容
        type: string
      title:
        description: 帖子的标题
        type: string
    type: object
host: 127.0.0.1:8080/v1
info:
  contact:
    email: 1446596766@qq.com
    name: XiaoShuPeiQi
  description: Go web 开发进阶项目实战 --> 源自李文周
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: bluebell 项目接口文档
  version: "2.0"
paths:
  /community:
    get:
      consumes:
      - application/json
      description: 访问此接口，返回社区信息切片
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: get社区表
      tags:
      - 社区相关接口
  /community/{id}:
    get:
      consumes:
      - application/json
      description: 访问此接口，返回指定id的社区信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 社区ID(1-4)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据id返回社区详情
      tags:
      - 社区相关接口
  /login:
    post:
      consumes:
      - application/json
      description: user login，输入账号和密码，得到token继而开放访问其他页面
      parameters:
      - description: 登录参数(账号和密码)
        in: body
        name: object
        schema:
          $ref: '#/definitions/models.ParamLogin'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: 用户登录请求接口
      tags:
      - 用户相关接口
  /ping:
    post:
      consumes:
      - application/json
      description: 这个接口用于ping服务器，返回"pong"消息。
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Token有效性检测
      tags:
      - 用户相关接口
  /post:
    post:
      consumes:
      - application/json
      description: 创建帖子接口：输入标题、内容、所属社区id
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 创建帖子参数
        in: body
        name: object
        schema:
          $ref: '#/definitions/models.PostSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建帖子
      tags:
      - 帖子相关接口
  /post/{id}:
    get:
      consumes:
      - application/json
      description: 输入帖子id，获取帖子信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 帖子id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据id获取帖子
      tags:
      - 帖子相关接口
  /posts:
    get:
      consumes:
      - application/json
      description: 输入page和size，获取帖子列表
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 每页大小
        in: query
        name: size
        type: string
      - description: 第几页？
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: 分页获取帖子列表
      tags:
      - 帖子相关接口
  /posts2:
    get:
      consumes:
      - application/json
      description: 输入page、size、order，获取帖子列表
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 每页大小
        in: query
        name: size
        type: string
      - description: 第几页？
        in: query
        name: page
        type: string
      - description: 排序方式(time/score)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: 新版社区列表，支持按发帖时间/帖子分数排序
      tags:
      - 帖子相关接口
  /signup:
    post:
      consumes:
      - application/json
      description: user signup，输入账号、密码、确认密码，完成注册
      parameters:
      - description: 注册参数(账号、密码、确认密码)
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ParamSignup'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: 用户注册请求接口
      tags:
      - 用户相关接口
  /vote:
    post:
      consumes:
      - application/json
      description: 帖子id(表明哪个帖子)、投什么票(1：赞成 0：不投票 -1：反对)
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 投票参数()
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ParamVoteForPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Response'
      security:
      - ApiKeyAuth: []
      summary: 给帖子投票
      tags:
      - 投票相关接口
swagger: "2.0"
